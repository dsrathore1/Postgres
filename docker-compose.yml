version: "3.8"

volumes:
  db_vol:
    name: "postgres-vol"
  pg_admin-vol:
  node_app-vol:

services:
  # Adminer Container
  pg_admin:
    image: "dpage/pgadmin4"
    restart: "always"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PWD}
    env_file:
      - .env
    ports:
      - "${PA_PORT}:80"
    expose:
      - "${PA_PORT}"
    volumes:
      - pg_admin-vol:/var/lib/pgadmin

  # Postgres Container
  p_db:
    image: "postgres"
    working_dir: /important-queries
    ports:
      - "${PG_PORT}:${PG_PORT}"
    expose:
      - "${PG_PORT}"
    volumes:
      - db_vol:/var/lib/postgresql/data
      - ./Query.sql:/important-queries/Query.sql
      - ./.env:/important-queries/.env
      - ./:/important-queries
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PWD}
      POSTGRES_DB: ${PSQL_DB}
    stdin_open: true
    restart: "always"
    env_file:
      - .env
    depends_on:
      - pg_admin

  # NodeJS Server
  node_app:
    container_name: "pn-connection"
    build:
      context: ./app/
      dockerfile: Dockerfile
    volumes:
      - node_app-vol:/NODE_APP
      - ./:/NODE_APP
      - ./app:/NODE_APP/app
      - ./app/package.json:/NODE_APP/app/package.json
      - ./app/server.js:/NODE_APP/app/server.js
    ports:
      - "${ND_PORT}:${ND_PORT}"
    expose:
      - ${ND_PORT}
    depends_on:
      - pg_admin
      - p_db
    env_file:
      - .env